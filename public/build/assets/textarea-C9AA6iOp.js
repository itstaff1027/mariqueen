import{$ as P,a as H}from"./useFocusRing-CbgUoASV.js";import{r as o}from"./app-DzVPnBm_.js";import{a as y,U as I}from"./description-DvabQjNZ.js";import{K as T,y as M,n as w,o as S,L as E,_ as U}from"./use-sync-refs-mp_AuGG8.js";let j=o.createContext(void 0);function F(){return o.useContext(j)}let v=o.createContext(null);v.displayName="LabelContext";function L(){let l=o.useContext(v);if(l===null){let r=new Error("You used a <Label /> component, but it is not inside a relevant parent.");throw Error.captureStackTrace&&Error.captureStackTrace(r,L),r}return l}function A(l){var r,n,i;let e=(n=(r=o.useContext(v))==null?void 0:r.value)!=null?n:void 0;return((i=void 0)!=null?i:0)>0?[e,...l].filter(Boolean).join(" "):e}let B="label";function D(l,r){var n;let i=o.useId(),e=L(),b=F(),s=y(),{id:a=`headlessui-label-${i}`,htmlFor:u=b??((n=e.props)==null?void 0:n.htmlFor),passive:h=!1,...c}=l,C=M(r);w(()=>e.register(a),[a,e.register]);let m=S(f=>{let p=f.currentTarget;if(p instanceof HTMLLabelElement&&f.preventDefault(),e.props&&"onClick"in e.props&&typeof e.props.onClick=="function"&&e.props.onClick(f),p instanceof HTMLLabelElement){let t=document.getElementById(p.htmlFor);if(t){let k=t.getAttribute("disabled");if(k==="true"||k==="")return;let g=t.getAttribute("aria-disabled");if(g==="true"||g==="")return;(t instanceof HTMLInputElement&&(t.type==="radio"||t.type==="checkbox")||t.role==="radio"||t.role==="checkbox"||t.role==="switch")&&t.click(),t.focus({preventScroll:!0})}}}),x=s||!1,$=o.useMemo(()=>({...e.slot,disabled:x}),[e.slot,x]),d={ref:C,...e.props,id:a,htmlFor:u,onClick:m};return h&&("onClick"in d&&(delete d.htmlFor,delete d.onClick),"onClick"in c&&delete c.onClick),E()({ourProps:d,theirProps:c,slot:$,defaultTag:u?B:"div",name:e.name||"Label"})}let N=T(D);Object.assign(N,{});let G="textarea";function J(l,r){let n=o.useId(),i=F(),e=y(),{id:b=i||`headlessui-textarea-${n}`,disabled:s=e||!1,autoFocus:a=!1,invalid:u=!1,...h}=l,c=A(),C=I(),{isFocused:m,focusProps:x}=P({autoFocus:a}),{isHovered:$,hoverProps:d}=H({isDisabled:s}),f=U({ref:r,id:b,"aria-labelledby":c,"aria-describedby":C,"aria-invalid":u?"":void 0,disabled:s||void 0,autoFocus:a},x,d),p=o.useMemo(()=>({disabled:s,invalid:u,hover:$,focus:m,autofocus:a}),[s,u,$,m,a]);return E()({ourProps:f,theirProps:h,slot:p,defaultTag:G,name:"Textarea"})}let q=T(J);export{q as J};
